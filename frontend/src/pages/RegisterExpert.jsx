import React, { useState } from "react";
import useForm from "../hooks/useForm";
import Input from "../components/Input";
import { useAuth } from "../context/AuthContext";
import styles from "../css/RegisterExpert.module.css";
import 'font-awesome/css/font-awesome.min.css';
import logo from "../assets/logosingle.png"

const RegisterExpertPage = () => {
    const { values, handleChange } = useForm({
        degree: "",
        position: "",
        workplace: "",
        workField: "",
        phone: "",
        status: "CHO_DUYET",
        isExpert: true,
    });

    const [files, setFiles] = useState([]);
    const { registerExpert } = useAuth();

    const handleFileChange = (e) => {
        const selectedFiles = Array.from(e.target.files);
        setFiles(selectedFiles);
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const formData = new FormData();
            Object.entries(values).forEach(([key, value]) =>
                formData.append(key, value)
            );
            files.forEach((file) => formData.append("documents", file));

            const result = await registerExpert(formData);

            if (result?.success) {
                alert("ƒêƒÉng k√Ω chuy√™n gia th√†nh c√¥ng!");
                window.location.href = "/login";
            } else {
                alert(result?.message || "ƒêƒÉng k√Ω th·∫•t b·∫°i.");
            }
        } catch (err) {
            console.error(err);
            alert("ƒê√£ x·∫£y ra l·ªói.");
        }
    };

    return (
        <div className={styles.container}>
            <form className={styles.form} onSubmit={handleSubmit}>
                <img src={logo} alt="Logo" className={styles.logo} />
                <h2 className={styles.heading}>ƒêƒÉng k√Ω chuy√™n gia</h2>
                <div className={styles.formGrid}>
                    <div className={styles.column}>
                        {/* Degree select */}
                        <label className={styles.label}>
                            üéì Tr√¨nh ƒë·ªô h·ªçc v·∫•n <span className={styles.required}>*</span>
                            <select
                                name="degree"
                                value={values.degree}
                                onChange={handleChange}
                                required
                                className={styles.select}
                            >
                                <option value="">-- Ch·ªçn tr√¨nh ƒë·ªô --</option>
                                <option value="C·ª≠ nh√¢n">C·ª≠ nh√¢n</option>
                                <option value="Th·∫°c sƒ©">Th·∫°c sƒ©</option>
                                <option value="Ti·∫øn sƒ©">Ti·∫øn sƒ©</option>
                                <option value="Kh√°c">Kh√°c</option>
                            </select>
                        </label>

                        {/* Position select */}
                        <label className={styles.label}>
                            üíº Ngh·ªÅ nghi·ªáp / V·ªã tr√≠ c√¥ng t√°c <span className={styles.required}>*</span>
                            <select
                                name="position"
                                value={values.position}
                                onChange={handleChange}
                                required
                                className={styles.select}
                            >
                                <option value="">-- Ch·ªçn v·ªã tr√≠ --</option>
                                <option value="B√°c sƒ©">B√°c sƒ©</option>
                                <option value="D∆∞·ª£c sƒ©">D∆∞·ª£c sƒ©</option>
                                <option value="Chuy√™n gia dinh d∆∞·ª°ng">Chuy√™n gia dinh d∆∞·ª°ng</option>
                                <option value="Kh√°c">Kh√°c</option>
                            </select>
                        </label>

                        <label className={styles.label}>
                            üè¢ ƒê∆°n v·ªã c√¥ng t√°c <span className={styles.required}>*</span>
                        <Input
                            name="workplace"
                            placeholder="Nh·∫≠p t√™n c∆° quan,b·ªánh vi·ªán,..."
                            value={values.workplace}
                            onChange={handleChange}
                            required
                        />
                        </label>

                        {/* WorkField select */}
                        <label className={styles.label}>
                            üìã Lƒ©nh v·ª±c c√¥ng t√°c <span className={styles.required}>*</span>
                            <select
                                name="workField"
                                value={values.workField}
                                onChange={handleChange}
                                required
                                className={styles.select}
                            >
                                <option value="">-- Ch·ªçn lƒ©nh v·ª±c --</option>
                                <option value="Dinh d∆∞·ª°ng l√¢m s√†ng">Dinh d∆∞·ª°ng l√¢m s√†ng</option>
                                <option value="Y t·∫ø c√¥ng c·ªông">Y t·∫ø c√¥ng c·ªông</option>
                                <option value="Nghi√™n c·ª©u khoa h·ªçc">Nghi√™n c·ª©u khoa h·ªçc</option>
                                <option value="Gi·∫£ng d·∫°y">Gi·∫£ng d·∫°y</option>
                                <option value="Kh√°c">Kh√°c</option>
                            </select>
                        </label>

                        <label className={styles.label}>
                            üìû S·ªë ƒëi·ªán tho·∫°i <span className={styles.required}>*</span>
                        <Input
                            name="phone"
                            placeholder="VD: 0987654321"
                            value={values.phone}
                            onChange={handleChange}
                            required
                        />
                        </label>
                        <div className={styles.checkboxContainer}>
                            <input type="checkbox" required />
                            <label>T√¥i cam k·∫øt th√¥ng tin l√† ch√≠nh x√°c</label>
                        </div>
                    </div>
                </div>

                <div className={styles.note}>
                    ‚ö†Ô∏è <strong>L∆∞u √Ω:</strong> H·ªì s∆° c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c xem x√©t v√† ph√™ duy·ªát trong th·ªùi gian s·ªõm nh·∫•t.
                </div>

                <div className={styles["button-container"]}>
                    <button
                        type="button"
                        className={styles["button-back"]}
                        onClick={() => window.history.back()}
                    >
                        <i className="fa fa-arrow-left"></i> Tr·ªü l·∫°i
                    </button>

                    <button
                        type="submit"
                        className={styles["button-submit"]}
                    >
                        <i className="fa fa-check"></i> ƒêƒÉng k√Ω
                    </button>
                </div>
            </form>
        </div>
    );
};

export default RegisterExpertPage;
